
列表推导式:

列表推导式为从序列中创建列表提供了一个简单的方法。
如果没有列表推导式，一般都是这样创建列表的：
通过将一些操作应用于序列的每个成员并通过返回的元素创建列表，或者通过满足特定条件的元素创建子序列

假设我们创建一个 squares 列表，可以像下面这样创建

>>> squares = []
>>> for x in range(10):
...     squares.append(x**2)
... 
>>> squares
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

注意这个 for 循环中的被创建（或被重写）的名为 x 的变量在循环完毕后依然存在。
使用如下方法，我们可以计算 squares 的值而不会产生任何的副作用：

>>> squares1 = list(map(lambda x: x**2, range(10)))
>>> squares1
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

等价于下面的列表推导式

>>> squares2 = [x**2 for x in range(10)]
>>> squares2
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

上面这个方法更加简明且易读

列表推导式由包含一个表达式的中括号组成，表达式后面跟随一个 for 子句，
之后可以有零或多个 for 或 if 子句。
结果是一个列表，由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成

>>> [(x,y) for x in [1,2,3] for y in [3,1,4] if x != y]
[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]






