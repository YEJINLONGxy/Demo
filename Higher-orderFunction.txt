
高阶函数：

高阶函数（Higher-order function）或仿函数（functor）是可以接受函数作为参数的函数：

使用一个或多个函数作为参数
返回另一个函数作为输出
Python 里的任何函数都可以作为高阶函数，下面举一个简单的例子：

#创建一个函数，将参数列表中每个元素都变成全大写
>>> def high(l):
...     return[i.upper() for i in l]
... 

#创建高阶函数，接收一个函数和一个列表作为参数
>>> def test(h, l):
...     return h(l)
... 
>>> l
['python', 'linux', 'Git']
#运行高阶函数， 返回预期的结果
>>> test(high, l)
['PYTHON', 'LINUX', 'GIT']

或

>>> def test(l):
...     return high(l)
... 
>>> test(l)
['PYTHON', 'LINUX', 'GIT']

+++++++++++++++++++++++++++++++++++++++++++++++++++++
map 函数
map 是一个在 Python 里非常有用的高阶函数。
它接受一个函数和一个序列（迭代器）作为输入，然后对序列（迭代器）的每一个值应用这个函数，返回一个序列（迭代器），其包含应用函数后的结果

列如：

>>> def square(num):
...     "返回所给数字的平方."
...     return num * num
... 
>>> print(list(map(square, lst)))
[1, 4, 9, 16, 25]

++++++++++++++++++++++++++++++++++++++++++++++++
在 Python 中还有其它的高阶函数，如 sorted()、filter() 以及 functools 模块中的函数，大家可以了解一下






